buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.gradle.publish:plugin-publish-plugin:0.9.9"
    }
}

plugins {
    id 'net.researchgate.release' version '2.8.1'
}

configurations.all {
    resolutionStrategy {
        force 'org.codehaus.groovy:groovy-all:2.5.12'
    }
}

group 'cz.alenkacz.gradle'
version = '1.2.2'

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'maven-publish'

repositories {
    jcenter()
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

//task wrapper(type: Wrapper) {
//    gradleVersion = "6.6"
//}

dependencies {
    compile gradleApi()
    compile 'org.codehaus.groovy:groovy-all:2.4.7'
    compile group: "org.everit.json", name: "org.everit.json.schema", version: "1.1.1"
    compile 'com.github.fge:json-schema-validator:2.2.6'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile gradleTestKit()
    testCompile ('org.spockframework:spock-core:1.0-groovy-2.4') {
        exclude group:'org.codehaus.groovy'
    }
}

// Write the plugin's classpath to a file to share with the tests
task createClasspathManifest {
    def outputDir = file("$buildDir/$name")

    inputs.files sourceSets.main.runtimeClasspath
    outputs.dir outputDir

    doLast {
        outputDir.mkdirs()
        file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
    }
}

// Add the classpath file to the test runtime classpath
dependencies {
    testRuntime files(createClasspathManifest)
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            from components.java
//            pom {
//                name = "Gradle Json Validator"
//                description = "Gradle Json Validator"
//                url = "TDB"
//            }
//        }
//    }
    repositories {
        maven {
            url 'https://pkgs.dev.azure.com/pandora-jewelry/eda-integration-platform/_packaging/eda-integration-platform-feed/maven/v1'
            credentials {
                username "eda-integration-platform-feed"
                //The Azure DevOps Services build system will use the "AZURE_ARTIFACTS_ENV_ACCESS_TOKEN" to authenticate to Azure DevOps Services feeds
                password System.getenv("AZURE_ARTIFACTS_ENV_ACCESS_TOKEN") != null ? System.getenv("AZURE_ARTIFACTS_ENV_ACCESS_TOKEN") : vstsMavenAccessToken
            }
        }
    }
}

//project.ext.set('gradle.publish.key', System.getenv('GRADLE_PORTAL_KEY'))
//project.ext.set('gradle.publish.secret', System.getenv('GRADLE_PORTAL_SECRET'))
//pluginBundle {
//    website = 'https://github.com/alenkacz/gradle-json-validator'
//    vcsUrl = 'https://github.com/alenkacz/gradle-json-validator'
//    description = 'Gradle plugin for json validation (json schema)'
//    tags = ['json', 'schema', 'validation']
//
//    plugins {
//        jsonValidatorPlugin {
//            id = 'cz.alenkacz.gradle.jsonvalidator'
//            displayName = 'Gradle Json Schema Validator'
//        }
//    }
//}
